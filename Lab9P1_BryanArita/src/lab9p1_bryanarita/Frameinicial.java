/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lab9p1_bryanarita;

import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author mlope
 */
public class Frameinicial extends javax.swing.JFrame {
    
    public Scanner duki = new Scanner(System.in);
    public Random rndm = new Random();

    public Frameinicial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Gusanito");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Lab 9 - Q4-2023");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jButton1)
                .addGap(46, 46, 46)
                .addComponent(jButton2)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int manzana;
        int gusano;
        String[] elsplit;
        char matriz[][];
        String coordenadas = JOptionPane.showInputDialog(null, "Ingrese las dimensiones del tablero en el formato ancho,alto");
        elsplit = coordenadas.split(",");

        int x = Integer.parseInt(elsplit[0]);
        int y = Integer.parseInt(elsplit[1]);
        if (x < 4 || x > 10 && y < 4 || y > 10) {
            JOptionPane.showMessageDialog(null, "Las coordenadas deben ser mayor que 3 y menor que 11", "Coordenadas", JOptionPane.WARNING_MESSAGE);
        } else {
            matriz = Matrizgenerada(x, y);
            imprimirMatriz(matriz);

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frameinicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frameinicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frameinicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frameinicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frameinicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    
    public char[][] Matrizgenerada(int ancho, int alto) {
        char gusano = 'S';
        char manzana = 'O';
        int posgusanox = rndm.nextInt(ancho);
        int posgusanoy = rndm.nextInt(alto);

        int posmanzanax = rndm.nextInt(ancho);
        int posmanzanay = rndm.nextInt(alto);

        int inferior = 0;
        int superior = 0;
        if (ancho > alto) {
            inferior = alto;
            superior = ancho;
        } else if (alto > ancho) {
            inferior = ancho;
            superior = alto;
        } else if (alto == ancho) {
            inferior = ancho;
            superior = alto;
        }

        int Cobstaculos = rndm.nextInt((superior - inferior) + 1) + inferior;
        char[][] matriz = new char[ancho][alto];
        for (int i = 0; i < ancho; i++) {
            for (int j = 0; j < alto; j++) {
                matriz[i][j] = ' ';
            }
            System.out.println();
        }
        matriz[posgusanox][posgusanoy] = 'S';
        matriz[posmanzanax][posmanzanay] = 'O';
        for (int k = 0; k < Cobstaculos; k++) {
            int obstaculosx = rndm.nextInt(ancho);
            int obstaculosy = rndm.nextInt(alto);
            if (matriz[obstaculosx][obstaculosy] != 'S' && matriz[obstaculosx][obstaculosy] != 'O') {
                matriz[obstaculosx][obstaculosy] = '#';
            }
        }
        return matriz;
    }


    public void imprimirMatriz(char[][] matriz) {
        
        String[] split;
        String blank = " ";
        int cant = 0;
        boolean terminar = false;
        String acum = "";
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz[i].length; j++) {
                acum += "[" + matriz[i][j] + "] ";
            }
            acum += "\n";
        }
        while (!terminar) {
            int inst = Integer.parseInt(JOptionPane.showInputDialog(null, acum + "\n\n[1]Ingresar instruccion \n[2]Ejecutar instrucciones"));
            if (inst == 1) {
                String movimiento = JOptionPane.showInputDialog(null, acum + "\n\nIngrese la instrccion de la forma magnitud-DIRECCION (ej. 2-U)");
                split = movimiento.split("-");
                int numero = Integer.parseInt(split[0]);
                int move = Integer.parseInt(split[1]);
                ArrayList instrucciones = new ArrayList();
                instrucciones.add(move);

                String[] direccion = {"U", "D", "R", "L"};

//                if (move == Integer.parseInt(direccion[0])) {
//                    gusanoy = (char) (gusanoy - numero);
//                } else if (move == Integer.parseInt(direccion[1])) {
//                    gusanoy = (char) (gusanoy + numero);
//                } else if (move == Integer.parseInt(direccion[2])) {
//                    gusanox = (char) (gusanox + numero);
//                } else if (move == Integer.parseInt(direccion[3])) {
//                    gusanox = (char) (gusanox - numero);
//                }

                if (move > matriz.length || inst == 2) {
                    if (move > matriz.length) {
                        int pasarse = matriz.length - move;
                        int opcionPASARSE = Integer.parseInt(JOptionPane.showInputDialog(null, acum + "\n\nTe pasaste por: " + pasarse + "\n\n1.Ver siguient paso"
                                + "\n2.Ver paso anterior \n3.Seleccionar paso \n4.Volver al menu"));
                        if (opcionPASARSE == 4) {
                            terminar = true;
                            break;
                        }
                    } else if (inst == 2) {
                        JOptionPane.showInputDialog(null, acum + "\n\nLOGRASTE LLEGAR A LA MANZANA!! \n\n1.Ver siguient paso"
                                + "\n2.Ver paso anterior \n3.Seleccionar paso \n4.Volver al menu");
                        terminar = true;

                    }
                }
            } else if (inst > 2) {
                JOptionPane.showMessageDialog(null, "OPCION NO VALIDA");
            }

        }
    }

}
